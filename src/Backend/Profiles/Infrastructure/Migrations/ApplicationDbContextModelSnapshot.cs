// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Profiles.Infrastructure.Persistence;

#nullable disable

namespace Profiles.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.CityModel", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid")
                        .HasColumnName("cty_city_id");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean")
                        .HasColumnName("cty_disabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cty_name");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid")
                        .HasColumnName("prv_province_id");

                    b.HasKey("CityId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("tbl_city");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.CountryModel", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid")
                        .HasColumnName("ctr_country_id");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean")
                        .HasColumnName("ctr_disabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ctr_name");

                    b.HasKey("CountryId");

                    b.ToTable("tbl_country");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.ProvinceModel", b =>
                {
                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid")
                        .HasColumnName("prv_province_id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid")
                        .HasColumnName("ctr_country_id");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean")
                        .HasColumnName("prv_disabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prv_name");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("tbl_province");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.CityModel", b =>
                {
                    b.HasOne("Profiles.Infrastructure.Persistence.Models.ProvinceModel", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.ProvinceModel", b =>
                {
                    b.HasOne("Profiles.Infrastructure.Persistence.Models.CountryModel", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.CountryModel", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("Profiles.Infrastructure.Persistence.Models.ProvinceModel", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
